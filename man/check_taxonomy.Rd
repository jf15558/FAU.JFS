% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_taxonomy.R
\name{check_taxonomy}
\alias{check_taxonomy}
\title{check_taxonomy}
\usage{
check_taxonomy(
  x,
  ranks = NULL,
  species = FALSE,
  routine = c("format_check", "spell_check", "discrete_rank", "duplicate_tax"),
  format_clean = FALSE,
  spell_clean = FALSE,
  thresh = NULL,
  tax_clean = TRUE,
  append = TRUE,
  terms = NULL,
  collapse = NULL,
  jw = 0.1,
  str = 1,
  str2 = NULL,
  method2 = "jaccard",
  q = 1,
  pref = NULL,
  suff = NULL,
  exclude = NULL,
  jump = 3,
  plot = FALSE
)
}
\arguments{
\item{x}{A dataframe with hierarchically organised
taxonomic information. If x only comprises the taxonomic
information, @param ranks does not need to be specified, but the
columns must be in order of decreasing taxonomic rank}

\item{ranks}{The column names of the taxonomic data fields
in x. These must be provided in order of decreasing taxonomic
rank}

\item{species}{A logical indicating if x contains a species
column. As the data must be supplied in hierarchical order,
this column will naturally be the last column in x and
species-specific spell checks will be performed on this column.}

\item{routine}{A character vector determining the flagging
and cleaning routines to employ. Valid values are format_check (check for
non letter characters and the number of words in names), spell_check
(flag potential spelling errors), discrete_rank (check that
taxonomic names are unique to their rank), duplicate_tax (flag
conflicting higher classifications of a given taxon)}

\item{format_clean}{If TRUE, the function will return cleaned versions of the columns in x
using the routines in @seealso clean_name. These routines can be
altered using the 'terms' and 'collapse' arguments.}

\item{spell_clean}{If TRUE, the function will return a cleaned version
of the supplied taxonomic dataframe, using the supplied threshold
for the similarity method given by method2, to automatically update
any names in pairs of flagged synonyms to the more frequent spelling.
This is not recommended, however, so the argument is FALSE by default
and the threshold left as NULL}

\item{thresh}{The threshold for the similarity method given by method2,
below which flagged pairs of names will be considered synonyms and
resolved automatically. See @seealso spell_check for details on method2}

\item{tax_clean}{If TRUE, the function will return a cleaned version
of the supplied taxonomic dataframe, using @seealso resolve_duplicates
to resolve conflicts in the way documented by the function. Both
spell_clean and tax_clean can both be TRUE to return a dataset cleaned
by both methods}

\item{append}{If TRUE, any suffixes used during cleaning will
be retained in the cleaned version of the data. This is preferable
as it ensures that all taxonomic names are rank-discrete and
uniquely classified}

\item{terms}{If not NULL, a character vector of terms (which
will be used at all ranks) or a list of rank-specific terms to be cleaned
from taxonomic names if format_clean = TRUE. If a list, this
should be given in descending rank order. Called by @seealso
clean_name}

\item{collapse}{If not NULL, a character vector of string (which
will be used at all ranks) or a list of rank-specific strings which will
be collapsed in taxonomic names if format_clean = TRUE (i.e. replaced by "",
rather than the default " "). If one of the collapse terms is a regex special
character, it will need to be escaped, e.g. "\-". If a list, this
should be given in descending rank order. Called by @seealso
clean_name}

\item{jw}{a numeric greater than 0 and less than 1. This is
the distance threshold below which potential synonyms will be
considered. Called by @seealso spell_check}

\item{str}{A positive integer specifying the
number of matching characters at the beginning of synonym
pairs. By default 1, i.e. the first letters must match. Called
by @seealso spell_check}

\item{str2}{If not NULL, a positive integer specifying the
number of matching characters at the end of synonym pairs.
Called by @seealso spell_check}

\item{method2}{A character string of length one corresponding
to one of the methods used by @seealso afind. One of "osa",
"lv", "dl", "hamming", "lcs", "qgram", "cosine",
"running_cosine", "jaccard", or "soundex". Called by @seealso
spell_check}

\item{q}{q-gram size. Only used when method2 is "qgram",
"cosine" or "Jaccard". Called by @seealso spell_check}

\item{pref}{If not NULL, a character vector of prefixes (which
will be used at all ranks) or a list of rank-specific prefixes,
which may result in erroneously low JW distances. Synonyms will only
be considered if both terms share the same prefix. If a list, this
should be given in descending rank order. Called by @seealso
spell_check}

\item{suff}{If not NULL, a character vector of prefixes (which
will be used at all ranks) or a list of rank-specific prefixes,
which may result in erroneously low JW distances. Synonyms will only
be considered if both terms share the same suffix. If a list, this
should be given in descending rank order. Called by @seealso
spell_check}

\item{exclude}{If not NULL, a character vector of group names (which
will be used at all ranks) or a list of rank-specific group names,
which should be skipped - useful for groups which are known
to contain potentially similar terms. If a list, this
should be given in descending rank order. Called by @seealso
spell_check}

\item{jump}{The maximum number of ranks between the rank of
classification conflict and the next common classification (if present),
below which the divergence will be taken as conflicting.
Called by @seealso resolve_duplicates}

\item{plot}{A logical speciying if conflicting classifications should
be plotted. Called by @seealso resolve_duplicates}
}
\value{
A list with elements corresponding to the outputs of the
chosen flagging routines (three by default), plus
a cleaned taxonomic dataframe if any of format_clean, spell_clean or tax_clean
are TRUE. See @seealso spell_clean, @seealso check_ranks and @seealso
find_duplicates for details of the structure of the outputs
}
\description{
Function to implement a multi-step cleaning routine for
hierarchically structured taxonomic data. The first part
of the routine performs a few presumptive checks on all
columns, scanning for non letter characters and checking
the number of words in each string (all assumed to contain
1 word, aside from species names). If chosen, @seealso
clean_name is called to ensure correct formatting. The second
part of the routine calls @seealso spell_check to flag
spelling errors within a given taxonomic group. The third
part of the routine calls @seealso check_ranks to flag
name re-use at different levels. Some of these cases may
arise when a name has been unfortunately, but validly
used to refer to different groups at different taxonomic
levels. The fourth part of the routine calls @seealso
find_duplicates to flag variable higher classifications for
a given taxon. The function flags errors by default, but can
return a fully cleaned taxonomic scheme with conflicting
classifications eliminated or split by the addition of suffixes
to give unique taxonomic names. In the case of non-rank unique
names, the suffixes are of the form _RNK + the column number,
e.g _RNK1. For conflicting classifications, cleaning is
performed using @seealso resolve_duplicates, and in the case
of re-use of a name at the same rank for genuinely different
taxa, suffixes are capital letters, e.g. AlloniaA, AlloniaB
}
